<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:p="http://www.springframework.org/schema/p"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
  
  <bean id="jedisFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" 
  p:host-name="127.0.0.1" p:port="6379" p:usePool="true"/>
  
      <!-- redis 序列化策略 ，通常情况下key值采用String序列化策略， -->
    <!-- 如果不指定序列化策略，StringRedisTemplate的key和value都将采用String序列化策略； -->
    <!-- 但是RedisTemplate的key和value都将采用JDK序列化 这样就会出现采用不同template保存的数据不能用同一个template删除的问题 -->
    <bean id="stringRedisSerializer"  class="org.springframework.data.redis.serializer.StringRedisSerializer" />
    <bean id="jdkSerializer" class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
    
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
      p:connection-factory-ref="jedisFactory" p:keySerializer-ref="stringRedisSerializer" p:valueSerializer-ref="jdkSerializer"
      p:hashKeySerializer-ref="stringRedisSerializer" p:hashValueSerializer-ref="jdkSerializer"/>
      
    <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate" 
        p:connection-factory-ref="jedisFactory" p:keySerializer-ref="stringRedisSerializer" p:valueSerializer-ref="jdkSerializer"/>
</beans>